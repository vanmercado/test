{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\x245230\\\\desktop\\\\skillsmatrixaddy\\\\client\\\\src\\\\utils\\\\ExportChart.js\",\n    _s = $RefreshSig$();\n\n// React components\nimport React, { useState } from \"react\"; // Styling components\n\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\"; // Common utils and actions\n\nimport domtoimage from \"dom-to-image\";\nimport JsPDF from \"jspdf\";\nimport { CSVLink } from \"react-csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  paperProps: {\n    style: {\n      maxHeight: 48 * 4.5,\n      width: 150\n    }\n  },\n  button: {\n    width: \"100px\",\n    height: \"40px\",\n    marginBottom: \"10px\"\n  }\n};\nconst iconButton = \"exportIconButton\";\n\nconst filter = node => node.id !== iconButton; //#region Region for exporting to image\n\n\nconst exportToImage = async (chart, format, exportFunc) => {\n  try {\n    const dataUrl = await exportFunc(chart, {\n      filter\n    });\n    const link = document.createElement(\"a\");\n    document.body.appendChild(link);\n    link.download = `chart.${format}`;\n    link.href = dataUrl;\n    link.click();\n    link.remove();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(\"oops, something went wrong!\", err);\n  }\n};\n\nconst exportToJpeg = chart => exportToImage(chart, \"jpeg\", domtoimage.toJpeg);\n\nconst exportToPng = chart => exportToImage(chart, \"png\", domtoimage.toPng); //#endregion\n//#region Region for exporting to PDF\n\n\nconst exportToPdf = async chart => {\n  const width = chart.offsetWidth;\n  const height = chart.offsetHeight;\n\n  try {\n    const dataUrl = await domtoimage.toJpeg(chart, {\n      filter\n    }); // @ts-ignore\n\n    const doc = new JsPDF({\n      orientation: \"landscape\",\n      unit: \"px\",\n      format: [width, height]\n    });\n    const pdfWidth = doc.internal.pageSize.getWidth();\n    const pdfHeight = doc.internal.pageSize.getHeight();\n    doc.addImage(dataUrl, \"JPEG\", 0, 0, pdfWidth, pdfHeight);\n    doc.save(\"chart\");\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(\"oops, something went wrong!\", err);\n  }\n}; //#endregion\n//#region Region for printing\n\n\nconst print = async chart => {\n  try {\n    const dataUrl = await domtoimage.toJpeg(chart, {\n      filter\n    });\n    let html = `<html><head><title></title></head>`;\n    html += `<body style=\"width: 100%; padding: 0; margin: 0;\"`;\n    html += ` onload=\"window.focus(); window.print(); window.close()\">`;\n    html += `<img src=\"${dataUrl}\" /></body></html>`;\n    const printWindow = window.open(\"\", \"print\");\n    printWindow.document.open();\n    printWindow.document.write(html);\n    printWindow.document.close();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(\"oops, something went wrong!\", err);\n  }\n}; //#endregion\n// Export options definition\n\n\nconst exportOptions = [{\n  key: \"Print\",\n  action: print,\n  text: \"Print\"\n}, {\n  key: \"JPEG\",\n  action: exportToJpeg,\n  text: \"Save as JPEG\"\n}, {\n  key: \"PNG\",\n  action: exportToPng,\n  text: \"Save as PNG\"\n}, {\n  key: \"PDF\",\n  action: exportToPdf,\n  text: \"Save as PDF\"\n}]; //#region Region for the Export button functionality\n\nconst ExportChart = props => {\n  _s();\n\n  // State handling for this function\n  const [anchorEl, setAnchorEl] = useState(null);\n  const {\n    chartContainer\n  } = props;\n  const open = Boolean(anchorEl); // Custom event listeners\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleExport = _ref => {\n    let {\n      action\n    } = _ref;\n    return () => {\n      const chart = document.querySelector(`#${chartContainer}`);\n      handleClose();\n      action(chart);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      id: iconButton,\n      onClick: handleClick,\n      style: {\n        margin: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), \"Export\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      open: open,\n      onClose: handleClose,\n      PaperProps: styles.paperProps,\n      children: [exportOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleExport(option),\n        children: option.text\n      }, option.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(MenuItem, {\n        children: /*#__PURE__*/_jsxDEV(CSVLink, {\n          data: props.data,\n          style: {\n            textDecoration: \"none\",\n            color: \"inherit\"\n          },\n          onClick: handleClose,\n          children: \"Save as CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, 4, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; //#endregion\n\n\n_s(ExportChart, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n\n_c = ExportChart;\nexport default ExportChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExportChart\");","map":{"version":3,"names":["React","useState","Button","Menu","MenuItem","GetAppIcon","domtoimage","JsPDF","CSVLink","styles","paperProps","style","maxHeight","width","button","height","marginBottom","iconButton","filter","node","id","exportToImage","chart","format","exportFunc","dataUrl","link","document","createElement","body","appendChild","download","href","click","remove","err","console","error","exportToJpeg","toJpeg","exportToPng","toPng","exportToPdf","offsetWidth","offsetHeight","doc","orientation","unit","pdfWidth","internal","pageSize","getWidth","pdfHeight","getHeight","addImage","save","print","html","printWindow","window","open","write","close","exportOptions","key","action","text","ExportChart","props","anchorEl","setAnchorEl","chartContainer","Boolean","handleClick","event","currentTarget","handleClose","handleExport","querySelector","margin","map","option","data","textDecoration","color"],"sources":["C:/Users/x245230/desktop/skillsmatrixaddy/client/src/utils/ExportChart.js"],"sourcesContent":["// React components\nimport React, { useState } from \"react\";\n\n// Styling components\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\n// Common utils and actions\nimport domtoimage from \"dom-to-image\";\nimport JsPDF from \"jspdf\";\nimport { CSVLink } from \"react-csv\";\n\nconst styles = {\n  paperProps: {\n    style: {\n      maxHeight: 48 * 4.5,\n      width: 150,\n    },\n  },\n  button: {\n    width: \"100px\",\n    height: \"40px\",\n    marginBottom: \"10px\",\n  },\n};\n\nconst iconButton = \"exportIconButton\";\nconst filter = (node) => node.id !== iconButton;\n\n//#region Region for exporting to image\nconst exportToImage = async (chart, format, exportFunc) => {\n  try {\n    const dataUrl = await exportFunc(chart, { filter });\n    const link = document.createElement(\"a\");\n    document.body.appendChild(link);\n    link.download = `chart.${format}`;\n    link.href = dataUrl;\n    link.click();\n    link.remove();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(\"oops, something went wrong!\", err);\n  }\n};\nconst exportToJpeg = (chart) => exportToImage(chart, \"jpeg\", domtoimage.toJpeg);\nconst exportToPng = (chart) => exportToImage(chart, \"png\", domtoimage.toPng);\n//#endregion\n\n//#region Region for exporting to PDF\nconst exportToPdf = async (chart) => {\n  const width = chart.offsetWidth;\n  const height = chart.offsetHeight;\n  try {\n    const dataUrl = await domtoimage.toJpeg(chart, { filter });\n    // @ts-ignore\n    const doc = new JsPDF({\n      orientation: \"landscape\",\n      unit: \"px\",\n      format: [width, height],\n    });\n    const pdfWidth = doc.internal.pageSize.getWidth();\n    const pdfHeight = doc.internal.pageSize.getHeight();\n    doc.addImage(dataUrl, \"JPEG\", 0, 0, pdfWidth, pdfHeight);\n    doc.save(\"chart\");\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(\"oops, something went wrong!\", err);\n  }\n};\n//#endregion\n\n//#region Region for printing\nconst print = async (chart) => {\n  try {\n    const dataUrl = await domtoimage.toJpeg(chart, { filter });\n    let html = `<html><head><title></title></head>`;\n    html += `<body style=\"width: 100%; padding: 0; margin: 0;\"`;\n    html += ` onload=\"window.focus(); window.print(); window.close()\">`;\n    html += `<img src=\"${dataUrl}\" /></body></html>`;\n\n    const printWindow = window.open(\"\", \"print\");\n    printWindow.document.open();\n    printWindow.document.write(html);\n    printWindow.document.close();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(\"oops, something went wrong!\", err);\n  }\n};\n//#endregion\n\n// Export options definition\nconst exportOptions = [\n  { key: \"Print\", action: print, text: \"Print\" },\n  { key: \"JPEG\", action: exportToJpeg, text: \"Save as JPEG\" },\n  { key: \"PNG\", action: exportToPng, text: \"Save as PNG\" },\n  { key: \"PDF\", action: exportToPdf, text: \"Save as PDF\" },\n];\n\n//#region Region for the Export button functionality\nconst ExportChart = (props) => {\n  // State handling for this function\n  const [anchorEl, setAnchorEl] = useState(null);\n  const { chartContainer } = props;\n  const open = Boolean(anchorEl);\n\n  // Custom event listeners\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleExport = ({ action }) => {\n    return () => {\n      const chart = document.querySelector(`#${chartContainer}`);\n      handleClose();\n      action(chart);\n    };\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        id={iconButton}\n        onClick={handleClick}\n        style={{ margin: \"30px\" }}\n      >\n        <GetAppIcon />\n        Export\n      </Button>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        PaperProps={styles.paperProps}\n      >\n        {exportOptions.map((option) => (\n          <MenuItem key={option.key} onClick={handleExport(option)}>\n            {option.text}\n          </MenuItem>\n        ))}\n        <MenuItem key={4}>\n          <CSVLink\n            data={props.data}\n            style={{ textDecoration: \"none\", color: \"inherit\" }}\n            onClick={handleClose}\n          >\n            Save as CSV\n          </CSVLink>\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n//#endregion\n\nexport default ExportChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}