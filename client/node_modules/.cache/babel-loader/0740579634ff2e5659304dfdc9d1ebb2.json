{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\x245230\\\\desktop\\\\skillsmatrixaddy\\\\client\\\\src\\\\components\\\\admin\\\\SkillsCategoryManagement.js\",\n    _s = $RefreshSig$();\n\n//#region Import components\n// React components\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\"; // Material UI components\n\nimport MUIDataTable from \"mui-datatables\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Icon from \"@material-ui/core/Icon\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\"; // Common utils and actions\n\nimport { getSkillCategories, getChildSkills, createSkillCategory, updateSkillCategory, deleteSkillCategory, createSkill, deleteSkill } from \"../../actions\"; //#endregion\n//#region Region for Dialog Components and its styling\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.root,\n    ...other,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions); //#endregion\n// Theme for Material UI Data Table\n// const getMuiTheme = () =>\n//   createMuiTheme({\n//     overrides: {\n//       MUIDataTableBodyCell: {\n//         root: {\n//           backgroundColor: \"#FFFFFF\",\n//         },\n//       },\n//     },\n//   });\n// Styling for specific components\n\nconst useStyles = makeStyles(theme => ({\n  chips: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5)\n    }\n  },\n  textField: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"45ch\"\n    }\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  dialogContentGrid: {\n    flexGrow: \"1 !important\",\n    width: \"100% !important\"\n  }\n})); // Explicitly define columns and its options\n\nconst columns = [{\n  name: \"skill_cat_id\",\n  label: \"ID\",\n  options: {\n    display: false,\n    filter: true,\n    sort: true\n  }\n}, {\n  name: \"skill_cat_desc\",\n  label: \"Category\",\n  options: {\n    filter: true,\n    sort: true\n  }\n}, {\n  name: \"child_skills\",\n  label: \"Child Skills\",\n  options: {\n    filter: true,\n    sort: true\n  }\n}];\n\nfunction SkillsCategoryManagement(props) {\n  _s();\n\n  // Constants initialization\n  const {\n    profile,\n    getSkillCategories,\n    skillCategories,\n    getChildSkills,\n    childSkills,\n    createSkillCategory,\n    updateSkillCategory,\n    deleteSkillCategory,\n    createSkill,\n    deleteSkill\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [isAction, setIsAction] = useState(\"\");\n  const newSkillDescRef = useRef();\n  const newSkillCatDescRef = useRef();\n  const modalTitleSkillCatDescRef = useRef();\n  const classes = useStyles(); // Options for Material UI Data Table\n\n  const options = {\n    responsive: \"standard\",\n    selectableRows: \"none\",\n    onRowClick: row => {\n      // Trigger to update state for child skills\n      getChildSkills({\n        skill_cat_id: row[0]\n      }); // Set action as update upon trigger\n\n      setIsAction(\"UPDATE\"); // Update value of modal title upon trigger\n\n      modalTitleSkillCatDescRef.current = row[1]; // Open the modal\n\n      setOpen(true);\n    },\n    sortFilterList: true\n  };\n\n  const handleClose = () => {\n    if (isAction === \"UPDATE\") {\n      let modalTitleSkillCatDesc = document.getElementById(\"modal_title_skill_cat_desc\");\n      if (modalTitleSkillCatDesc) modalTitleSkillCatDesc.value = \"\";\n      modalTitleSkillCatDescRef.current = \"\"; // Update the state to reflect the newly added skill\n\n      getChildSkills({\n        skill_cat_id: childSkills[0].skill_cat_id\n      });\n    } else if (isAction === \"ADD\") {\n      // Get updated skill categories\n      getSkillCategories();\n    }\n\n    setIsAction(\"\");\n    setOpen(false);\n  };\n\n  const handleCreateSkillsCategory = () => {\n    // Only proceed if the value of the skill desc is not empty\n    if (newSkillCatDescRef.current) {\n      // Actual call for creation of skill category\n      createSkillCategory({\n        skill_cat_desc: newSkillCatDescRef.current\n      }); // Clear the input field\n\n      document.getElementById(\"new_skill_cat_desc\").value = \"\"; // Clear the state ref\n\n      newSkillCatDescRef.current = \"\";\n    }\n\n    handleClose();\n  };\n\n  const handleUpdateSkillCategory = () => {\n    // Actual call for updating of skill category\n    updateSkillCategory({\n      skill_cat_id: childSkills[0].skill_cat_id,\n      old_skill_cat_desc: childSkills[0].skill_cat_desc,\n      new_skill_cat_desc: modalTitleSkillCatDescRef.current\n    });\n    handleClose();\n  };\n\n  const handleDeleteSkillCategory = () => {\n    // Actual call for deletion of skill category\n    deleteSkillCategory({\n      skill_cat_id: childSkills[0].skill_cat_id,\n      skill_cat_desc: modalTitleSkillCatDescRef.current\n    });\n    handleClose();\n  };\n\n  const handleCreateSkill = () => {\n    // Only proceed if the value of the skill desc is not empty\n    if (newSkillDescRef.current) {\n      // Actual call for creation of skill\n      createSkill({\n        skill_desc: newSkillDescRef.current,\n        skill_cat_id: childSkills[0].skill_cat_id\n      }); // Clear the input field\n\n      document.getElementById(\"new_skill_desc\").value = \"\"; // Clear the state ref\n\n      newSkillDescRef.current = \"\";\n    }\n\n    handleClose();\n  };\n\n  const handleDeleteSkill = (skill_cat_id, skill_id) => {\n    if (skill_cat_id && skill_id) {\n      // Actual call for deletion of skill\n      deleteSkill({\n        skill_cat_id: skill_cat_id,\n        skill_id: skill_id\n      });\n    }\n\n    handleClose();\n  }; // Only trigger api call once using the email of the user\n\n\n  useEffect(() => {\n    if (profile || !open) getSkillCategories(); // eslint-disable-next-line\n  }, [open]);\n\n  const contentForCreatingSkillCategory = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      align: \"center\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      spacing: 1,\n      className: classes.dialogContentGrid,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.textField,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          id: \"new_skill_cat_desc\",\n          label: \"Skill Category Description\",\n          variant: \"outlined\",\n          ref: newSkillCatDescRef,\n          onChange: event => newSkillCatDescRef.current = event.target.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          className: classes.button,\n          startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 24\n          }, this),\n          onClick: handleCreateSkillsCategory,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this);\n  };\n\n  const contentForAddingSkillsOnSkillCategory = () => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      align: \"center\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      spacing: 1,\n      className: classes.dialogContentGrid,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.textField,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"new_skill_desc\",\n          label: \"Skill Description\",\n          variant: \"outlined\",\n          ref: newSkillDescRef,\n          onChange: event => newSkillDescRef.current = event.target.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          className: classes.button,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 24\n          }, this),\n          onClick: () => handleCreateSkill(),\n          children: \"Add Skill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.chips,\n        children: Array.isArray(childSkills) && childSkills.length > 0 ? childSkills[0].skill.map(item => /*#__PURE__*/_jsxDEV(Chip, {\n          variant: \"outlined\",\n          size: \"small\",\n          label: item.skill_desc,\n          onDelete: () => handleDeleteSkill(item.skill_cat_id, item.skill_id)\n        }, item.skill_id + \"-\" + item.skill_desc, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 17\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this);\n  };\n\n  return profile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: () => {\n            setIsAction(\"ADD\");\n            setOpen(true);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            children: \"add_circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), \"\\xA0 Add a Skill Category\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: skillCategories && skillCategories.length > 0 ? /*#__PURE__*/_jsxDEV(MUIDataTable, {\n          title: \"\",\n          data: skillCategories,\n          columns: columns,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: handleClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"customized-dialog-title\",\n        onClose: handleClose,\n        children: isAction === \"ADD\" ? \"Add new Skill Category\" : isAction === \"UPDATE\" ? /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"modal_title_skill_cat_desc\",\n          label: \"Skill Category Description\",\n          variant: \"outlined\",\n          defaultValue: modalTitleSkillCatDescRef.current,\n          onChange: event => modalTitleSkillCatDescRef.current = event.target.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this) : \"Modal Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: isAction === \"ADD\" ? contentForCreatingSkillCategory() : isAction === \"UPDATE\" ? contentForAddingSkillsOnSkillCategory() : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), isAction === \"UPDATE\" ? /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUpdateSkillCategory,\n          color: \"primary\",\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteSkillCategory,\n          color: \"primary\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true) : null;\n}\n\n_s(SkillsCategoryManagement, \"auxd7PgFryETkllgKw3mEmDLlEc=\", false, function () {\n  return [useStyles];\n});\n\n_c = SkillsCategoryManagement;\n\nconst mapStateToProps = state => ({\n  skillCategories: state.skillCategories,\n  childSkills: state.childSkills\n});\n\nexport default connect(mapStateToProps, {\n  getSkillCategories,\n  getChildSkills,\n  createSkillCategory,\n  updateSkillCategory,\n  deleteSkillCategory,\n  createSkill,\n  deleteSkill\n})(SkillsCategoryManagement);\n\nvar _c;\n\n$RefreshReg$(_c, \"SkillsCategoryManagement\");","map":{"version":3,"names":["React","useEffect","useState","useRef","connect","MUIDataTable","makeStyles","withStyles","Button","Chip","CloseIcon","Dialog","IconButton","Grid","Icon","MuiDialogContent","MuiDialogActions","MuiDialogTitle","SaveIcon","AddIcon","TextField","Typography","getSkillCategories","getChildSkills","createSkillCategory","updateSkillCategory","deleteSkillCategory","createSkill","deleteSkill","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClose","other","DialogContent","DialogActions","useStyles","chips","display","justifyContent","flexWrap","textField","width","button","dialogContentGrid","flexGrow","columns","name","label","options","filter","sort","SkillsCategoryManagement","profile","skillCategories","childSkills","open","setOpen","isAction","setIsAction","newSkillDescRef","newSkillCatDescRef","modalTitleSkillCatDescRef","responsive","selectableRows","onRowClick","row","skill_cat_id","current","sortFilterList","handleClose","modalTitleSkillCatDesc","document","getElementById","value","handleCreateSkillsCategory","skill_cat_desc","handleUpdateSkillCategory","old_skill_cat_desc","new_skill_cat_desc","handleDeleteSkillCategory","handleCreateSkill","skill_desc","handleDeleteSkill","skill_id","contentForCreatingSkillCategory","event","target","contentForAddingSkillsOnSkillCategory","Array","isArray","length","skill","map","item","mapStateToProps","state"],"sources":["C:/Users/x245230/desktop/skillsmatrixaddy/client/src/components/admin/SkillsCategoryManagement.js"],"sourcesContent":["//#region Import components\n// React components\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\n// Material UI components\nimport MUIDataTable from \"mui-datatables\";\nimport {\n  makeStyles,\n  withStyles\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Icon from \"@material-ui/core/Icon\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Common utils and actions\nimport {\n  getSkillCategories,\n  getChildSkills,\n  createSkillCategory,\n  updateSkillCategory,\n  deleteSkillCategory,\n  createSkill,\n  deleteSkill,\n} from \"../../actions\";\n//#endregion\n\n//#region Region for Dialog Components and its styling\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n//#endregion\n\n// Theme for Material UI Data Table\n// const getMuiTheme = () =>\n//   createMuiTheme({\n//     overrides: {\n//       MUIDataTableBodyCell: {\n//         root: {\n//           backgroundColor: \"#FFFFFF\",\n//         },\n//       },\n//     },\n//   });\n\n// Styling for specific components\nconst useStyles = makeStyles((theme) => ({\n  chips: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n    },\n  },\n  textField: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"45ch\",\n    },\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  dialogContentGrid: {\n    flexGrow: \"1 !important\",\n    width: \"100% !important\",\n  },\n}));\n\n// Explicitly define columns and its options\nconst columns = [\n  {\n    name: \"skill_cat_id\",\n    label: \"ID\",\n    options: {\n      display: false,\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: \"skill_cat_desc\",\n    label: \"Category\",\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: \"child_skills\",\n    label: \"Child Skills\",\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n];\n\nfunction SkillsCategoryManagement(props) {\n  // Constants initialization\n  const {\n    profile,\n    getSkillCategories,\n    skillCategories,\n    getChildSkills,\n    childSkills,\n    createSkillCategory,\n    updateSkillCategory,\n    deleteSkillCategory,\n    createSkill,\n    deleteSkill,\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [isAction, setIsAction] = useState(\"\");\n  const newSkillDescRef = useRef();\n  const newSkillCatDescRef = useRef();\n  const modalTitleSkillCatDescRef = useRef();\n  const classes = useStyles();\n\n  // Options for Material UI Data Table\n  const options = {\n    responsive: \"standard\",\n    selectableRows: \"none\",\n    onRowClick: (row) => {\n      // Trigger to update state for child skills\n      getChildSkills({ skill_cat_id: row[0] });\n      // Set action as update upon trigger\n      setIsAction(\"UPDATE\");\n      // Update value of modal title upon trigger\n      modalTitleSkillCatDescRef.current = row[1];\n      // Open the modal\n      setOpen(true);\n    },\n    sortFilterList: true,\n  };\n\n  const handleClose = () => {\n    if (isAction === \"UPDATE\") {\n      let modalTitleSkillCatDesc = document.getElementById(\n        \"modal_title_skill_cat_desc\"\n      );\n      if (modalTitleSkillCatDesc) modalTitleSkillCatDesc.value = \"\";\n      modalTitleSkillCatDescRef.current = \"\";\n      // Update the state to reflect the newly added skill\n      getChildSkills({ skill_cat_id: childSkills[0].skill_cat_id });\n    } else if (isAction === \"ADD\") {\n      // Get updated skill categories\n      getSkillCategories();\n    }\n    setIsAction(\"\");\n    setOpen(false);\n  };\n\n  const handleCreateSkillsCategory = () => {\n    // Only proceed if the value of the skill desc is not empty\n    if (newSkillCatDescRef.current) {\n      // Actual call for creation of skill category\n      createSkillCategory({ skill_cat_desc: newSkillCatDescRef.current });\n      // Clear the input field\n      document.getElementById(\"new_skill_cat_desc\").value = \"\";\n      // Clear the state ref\n      newSkillCatDescRef.current = \"\";\n    }\n    handleClose();\n  };\n\n  const handleUpdateSkillCategory = () => {\n    // Actual call for updating of skill category\n    updateSkillCategory({\n      skill_cat_id: childSkills[0].skill_cat_id,\n      old_skill_cat_desc: childSkills[0].skill_cat_desc,\n      new_skill_cat_desc: modalTitleSkillCatDescRef.current,\n    });\n    handleClose();\n  };\n\n  const handleDeleteSkillCategory = () => {\n    // Actual call for deletion of skill category\n    deleteSkillCategory({\n      skill_cat_id: childSkills[0].skill_cat_id,\n      skill_cat_desc: modalTitleSkillCatDescRef.current,\n    });\n    handleClose();\n  };\n\n  const handleCreateSkill = () => {\n    // Only proceed if the value of the skill desc is not empty\n    if (newSkillDescRef.current) {\n      // Actual call for creation of skill\n      createSkill({\n        skill_desc: newSkillDescRef.current,\n        skill_cat_id: childSkills[0].skill_cat_id,\n      });\n      // Clear the input field\n      document.getElementById(\"new_skill_desc\").value = \"\";\n      // Clear the state ref\n      newSkillDescRef.current = \"\";\n    }\n    handleClose();\n  };\n\n  const handleDeleteSkill = (skill_cat_id, skill_id) => {\n    if (skill_cat_id && skill_id) {\n      // Actual call for deletion of skill\n      deleteSkill({\n        skill_cat_id: skill_cat_id,\n        skill_id: skill_id,\n      });\n    }\n    handleClose();\n  };\n\n  // Only trigger api call once using the email of the user\n  useEffect(() => {\n    if (profile || !open) getSkillCategories();\n    // eslint-disable-next-line\n  }, [open]);\n\n  const contentForCreatingSkillCategory = () => {\n    return (\n      <Grid\n        container\n        align=\"center\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={1}\n        className={classes.dialogContentGrid}\n      >\n        <Grid item xs={12} className={classes.textField}>\n          <TextField\n            required\n            id=\"new_skill_cat_desc\"\n            label=\"Skill Category Description\"\n            variant=\"outlined\"\n            ref={newSkillCatDescRef}\n            onChange={(event) =>\n              (newSkillCatDescRef.current = event.target.value)\n            }\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            className={classes.button}\n            startIcon={<SaveIcon />}\n            onClick={handleCreateSkillsCategory}\n          >\n            Save\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  const contentForAddingSkillsOnSkillCategory = () => {\n    return (\n      <Grid\n        container\n        align=\"center\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={1}\n        className={classes.dialogContentGrid}\n      >\n        <Grid item xs={12} className={classes.textField}>\n          <TextField\n            id=\"new_skill_desc\"\n            label=\"Skill Description\"\n            variant=\"outlined\"\n            ref={newSkillDescRef}\n            onChange={(event) => (newSkillDescRef.current = event.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            className={classes.button}\n            startIcon={<AddIcon />}\n            onClick={() => handleCreateSkill()}\n          >\n            Add Skill\n          </Button>\n        </Grid>\n        <Grid item xs={12} className={classes.chips}>\n          {Array.isArray(childSkills) && childSkills.length > 0\n            ? childSkills[0].skill.map((item) => (\n                <Chip\n                  key={item.skill_id + \"-\" + item.skill_desc}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label={item.skill_desc}\n                  onDelete={() =>\n                    handleDeleteSkill(item.skill_cat_id, item.skill_id)\n                  }\n                />\n              ))\n            : null}\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return profile ? (\n    <>\n      {/* <MuiThemeProvider theme={getMuiTheme()}> */}\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => {\n              setIsAction(\"ADD\");\n              setOpen(true);\n            }}\n          >\n            <Icon>add_circle</Icon>&nbsp; Add a Skill Category\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          {skillCategories && skillCategories.length > 0 ? (\n            <MUIDataTable\n              title=\"\"\n              data={skillCategories}\n              columns={columns}\n              options={options}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n      {/* </MuiThemeProvider> */}\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {isAction === \"ADD\" ? (\n            \"Add new Skill Category\"\n          ) : isAction === \"UPDATE\" ? (\n            <TextField\n              id=\"modal_title_skill_cat_desc\"\n              label=\"Skill Category Description\"\n              variant=\"outlined\"\n              defaultValue={modalTitleSkillCatDescRef.current}\n              onChange={(event) =>\n                (modalTitleSkillCatDescRef.current = event.target.value)\n              }\n            />\n          ) : (\n            \"Modal Title\"\n          )}\n        </DialogTitle>\n        <DialogContent dividers>\n          {isAction === \"ADD\"\n            ? contentForCreatingSkillCategory()\n            : isAction === \"UPDATE\"\n            ? contentForAddingSkillsOnSkillCategory()\n            : null}\n        </DialogContent>\n        {isAction === \"UPDATE\" ? (\n          <DialogActions>\n            <Button onClick={handleUpdateSkillCategory} color=\"primary\">\n              Save changes\n            </Button>\n            <Button onClick={handleDeleteSkillCategory} color=\"primary\">\n              Delete\n            </Button>\n          </DialogActions>\n        ) : null}\n      </Dialog>\n    </>\n  ) : null;\n}\n\nconst mapStateToProps = (state) => ({\n  skillCategories: state.skillCategories,\n  childSkills: state.childSkills,\n});\n\nexport default connect(mapStateToProps, {\n  getSkillCategories,\n  getChildSkills,\n  createSkillCategory,\n  updateSkillCategory,\n  deleteSkillCategory,\n  createSkill,\n  deleteSkill,\n})(SkillsCategoryManagement);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}