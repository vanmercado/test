{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\x245230\\\\desktop\\\\skillsmatrixaddy\\\\client\\\\src\\\\components\\\\reports\\\\ResourceCountPerSkill.js\",\n    _s = $RefreshSig$();\n\n//#region Import components\n// React components\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\"; // React Wrapper for ChartJS\n\nimport { Bar } from \"react-chartjs-2\"; // Material UI components\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\"; // Common utils and actions\n\nimport ExportChart from \"../../utils/ExportChart\";\nimport { getTeams, getResourceCountPerSkill } from \"../../actions\"; //#endregion\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst rootContainerId = \"widget-container\"; // Chart options definition\n\nconst chartOptions = {\n  options: {\n    tooltips: {\n      mode: \"index\",\n      intersect: false\n    },\n    responsive: true,\n    scales: {\n      xAxes: [{\n        stacked: true,\n        beginAtZero: true,\n        scaleLabel: {\n          labelString: \"Skills\"\n        },\n        ticks: {\n          autoSkip: false,\n          maxRotation: 90,\n          minRotation: 90\n        }\n      }],\n      yAxes: [{\n        stacked: true,\n        beginAtZero: true,\n        scaleLabel: {\n          labelString: \"Resource\"\n        },\n        ticks: {\n          stepSize: 1,\n          min: 0,\n          beginAtZero: true\n        }\n      }]\n    }\n  }\n};\n\nfunction ResourceCountPerSkill(props) {\n  _s();\n\n  // De-construction of props\n  const {\n    profile,\n    getTeams,\n    teams,\n    getResourceCountPerSkill,\n    resourceCountPerSkill\n  } = props;\n  const [selectedTeam, setSelectedTeam] = useState(\"\");\n  var teamListOptions = []; // Placeholders for the extracted labels and values\n\n  var label_contents = [],\n      data_contents = [];\n  useEffect(() => {\n    if (profile) getTeams();\n    if (selectedTeam) getResourceCountPerSkill({\n      teamId: selectedTeam\n    });else getResourceCountPerSkill({\n      teamId: null\n    }); // eslint-disable-next-line\n  }, [selectedTeam]);\n\n  if (resourceCountPerSkill) {\n    // Iterate for each index\n    Array.from(resourceCountPerSkill).forEach(function (resourceCountPerSkill) {\n      label_contents.push(resourceCountPerSkill.skill_desc);\n      data_contents.push(resourceCountPerSkill.skill_count);\n    });\n  } // If Teams from state has contents\n\n\n  if (teams != null && teams.length > 0) {\n    // Iterate for each index\n    Array.from(teams).forEach(item => {\n      // Customize the options for the Autocomplete field\n      // eg. 855 - TELUS TSBT - D&S JAVA Shared Pool (Dickenson Culala)\n      teamListOptions.push(item.team_id + \" - \" + item.team_name + \" (\" + item.manager_name + \")\");\n    });\n  } // Chart data definition\n\n\n  const chartData = {\n    labels: label_contents,\n    datasets: [{\n      label: \"Resource per Skill\",\n      backgroundColor: \"rgba(0, 207, 255,0.5)\",\n      borderColor: \"rgba(0, 207, 255,1)\",\n      borderWidth: 1,\n      data: data_contents\n    }]\n  };\n  return profile ? /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: true,\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        size: \"small\",\n        id: \"team_id\",\n        options: teamListOptions,\n        value: selectedTeam ? selectedTeam : null,\n        getOptionSelected: (option, value) => value ? option.id === value.id : null,\n        onChange: event => setSelectedTeam(event.target.textContent),\n        getOptionLabel: option => option,\n        style: {\n          width: \"50%\",\n          marginBottom: \"20px\"\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: \"Team ID or Team Name or Manager Name\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this),\n        noOptionsText: \"No results found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), resourceCountPerSkill ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(ExportChart, {\n          chartContainer: rootContainerId,\n          data: resourceCountPerSkill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        id: rootContainerId,\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this) : null;\n}\n\n_s(ResourceCountPerSkill, \"AQk7qb7bxhmWnOBGjwdjnxtLmgk=\");\n\n_c = ResourceCountPerSkill;\n\nconst mapStateToProps = state => ({\n  teams: state.teams,\n  resourceCountPerSkill: state.resourceCountPerSkill\n});\n\nexport default connect(mapStateToProps, {\n  getTeams,\n  getResourceCountPerSkill\n})(ResourceCountPerSkill);\n\nvar _c;\n\n$RefreshReg$(_c, \"ResourceCountPerSkill\");","map":{"version":3,"names":["React","useState","useEffect","connect","Bar","Autocomplete","Grid","TextField","ExportChart","getTeams","getResourceCountPerSkill","rootContainerId","chartOptions","options","tooltips","mode","intersect","responsive","scales","xAxes","stacked","beginAtZero","scaleLabel","labelString","ticks","autoSkip","maxRotation","minRotation","yAxes","stepSize","min","ResourceCountPerSkill","props","profile","teams","resourceCountPerSkill","selectedTeam","setSelectedTeam","teamListOptions","label_contents","data_contents","teamId","Array","from","forEach","push","skill_desc","skill_count","length","item","team_id","team_name","manager_name","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","option","value","id","event","target","textContent","width","marginBottom","params","mapStateToProps","state"],"sources":["C:/Users/x245230/desktop/skillsmatrixaddy/client/src/components/reports/ResourceCountPerSkill.js"],"sourcesContent":["//#region Import components\n// React components\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\n// React Wrapper for ChartJS\nimport { Bar } from \"react-chartjs-2\";\n\n// Material UI components\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\n// Common utils and actions\nimport ExportChart from \"../../utils/ExportChart\";\nimport { getTeams, getResourceCountPerSkill } from \"../../actions\";\n//#endregion\n\nconst rootContainerId = \"widget-container\";\n\n// Chart options definition\nconst chartOptions = {\n  options: {\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n    },\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          stacked: true,\n          beginAtZero: true,\n          scaleLabel: {\n            labelString: \"Skills\",\n          },\n          ticks: {\n            autoSkip: false,\n            maxRotation: 90,\n            minRotation: 90,\n          },\n        },\n      ],\n      yAxes: [\n        {\n          stacked: true,\n          beginAtZero: true,\n          scaleLabel: {\n            labelString: \"Resource\",\n          },\n          ticks: {\n            stepSize: 1,\n            min: 0,\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  },\n};\n\nfunction ResourceCountPerSkill(props) {\n  // De-construction of props\n  const {\n    profile,\n    getTeams,\n    teams,\n    getResourceCountPerSkill,\n    resourceCountPerSkill,\n  } = props;\n  const [selectedTeam, setSelectedTeam] = useState(\"\");\n  var teamListOptions = [];\n\n  // Placeholders for the extracted labels and values\n  var label_contents = [],\n    data_contents = [];\n\n  useEffect(() => {\n    if (profile) getTeams();\n    if (selectedTeam) getResourceCountPerSkill({ teamId: selectedTeam });\n    else getResourceCountPerSkill({ teamId: null });\n    // eslint-disable-next-line\n  }, [selectedTeam]);\n\n  if (resourceCountPerSkill) {\n    // Iterate for each index\n    Array.from(resourceCountPerSkill).forEach(function (resourceCountPerSkill) {\n      label_contents.push(resourceCountPerSkill.skill_desc);\n      data_contents.push(resourceCountPerSkill.skill_count);\n    });\n  }\n\n  // If Teams from state has contents\n  if (teams != null && teams.length > 0) {\n    // Iterate for each index\n    Array.from(teams).forEach((item) => {\n      // Customize the options for the Autocomplete field\n      // eg. 855 - TELUS TSBT - D&S JAVA Shared Pool (Dickenson Culala)\n      teamListOptions.push(\n        item.team_id + \" - \" + item.team_name + \" (\" + item.manager_name + \")\"\n      );\n    });\n  }\n\n  // Chart data definition\n  const chartData = {\n    labels: label_contents,\n    datasets: [\n      {\n        label: \"Resource per Skill\",\n        backgroundColor: \"rgba(0, 207, 255,0.5)\",\n        borderColor: \"rgba(0, 207, 255,1)\",\n        borderWidth: 1,\n        data: data_contents,\n      },\n    ],\n  };\n\n  return profile ? (\n    <Grid>\n      <Grid item xs>\n        <Autocomplete\n          size=\"small\"\n          id=\"team_id\"\n          options={teamListOptions}\n          value={selectedTeam ? selectedTeam : null}\n          getOptionSelected={(option, value) =>\n            value ? option.id === value.id : null\n          }\n          onChange={(event) => setSelectedTeam(event.target.textContent)}\n          getOptionLabel={(option) => option}\n          style={{ width: \"50%\", marginBottom: \"20px\" }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Team ID or Team Name or Manager Name\"\n              variant=\"outlined\"\n            />\n          )}\n          noOptionsText=\"No results found\"\n        />\n      </Grid>\n      {resourceCountPerSkill ? (\n        <>\n          <Grid item xs>\n            <ExportChart\n              chartContainer={rootContainerId}\n              data={resourceCountPerSkill}\n            />\n          </Grid>\n          <Grid item xs id={rootContainerId}>\n            <Bar data={chartData} options={chartOptions} />\n          </Grid>\n        </>\n      ) : null}\n    </Grid>\n  ) : null;\n}\n\nconst mapStateToProps = (state) => ({\n  teams: state.teams,\n  resourceCountPerSkill: state.resourceCountPerSkill,\n});\n\nexport default connect(mapStateToProps, {\n  getTeams,\n  getResourceCountPerSkill,\n})(ResourceCountPerSkill);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}