{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\x245230\\\\desktop\\\\skillsmatrixaddy\\\\client\\\\src\\\\components\\\\TechnicalInfoDialog.js\",\n    _s = $RefreshSig$();\n\n//#region Import components\n// React components\nimport React, { useState, forwardRef } from \"react\"; // Material UI components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport TechnicalInfo from \"./myInfo/TechnicalInfo\";\nimport { Tooltip } from \"@material-ui/core\"; //#endregion\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Transition = /*#__PURE__*/forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"up\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n    fontWeight: 500,\n    fontFamily: \"HelveticaNeueLTStd-Lt\"\n  }\n}));\n\nfunction TechnicalInfoDialog(props) {\n  _s();\n\n  // Constants initialization\n  const {\n    tmEmail,\n    tmName,\n    profile\n  } = props;\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = useState(false);\n  const [tmTechInfoDialogTitle, setTmTechInfoDialogTitle] = useState(false); // Function calls upon opening dialog\n\n  const handleOpenDialog = () => {\n    setTmTechInfoDialogTitle(tmName);\n    setIsOpen(true);\n  }; // Function calls upon closing dialog\n\n\n  const handleCloseDialog = () => {\n    setTmTechInfoDialogTitle(\"\");\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"View Skills\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleOpenDialog(),\n        variant: \"outlined\",\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(VisibilityIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullScreen: true,\n      open: isOpen,\n      onClose: () => handleCloseDialog(),\n      \"aria-labelledby\": \"responsive-dialog-title\",\n      TransitionComponent: Transition,\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        className: classes.appBar,\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            color: \"inherit\",\n            onClick: () => handleCloseDialog(),\n            \"aria-label\": \"close\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: classes.title,\n            children: `Technical Information of ${tmTechInfoDialogTitle}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TechnicalInfo, {\n              profile: profile,\n              tmEmail: tmEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TechnicalInfoDialog, \"NUYL1uP5XTa5JDU4lK84QV8uF4E=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = TechnicalInfoDialog;\nexport default TechnicalInfoDialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"TechnicalInfoDialog\");","map":{"version":3,"names":["React","useState","forwardRef","makeStyles","AppBar","Button","CloseIcon","Dialog","DialogContent","Grid","IconButton","Slide","Toolbar","Typography","VisibilityIcon","TechnicalInfo","Tooltip","Transition","props","ref","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","fontWeight","fontFamily","TechnicalInfoDialog","tmEmail","tmName","profile","classes","isOpen","setIsOpen","tmTechInfoDialogTitle","setTmTechInfoDialogTitle","handleOpenDialog","handleCloseDialog"],"sources":["C:/Users/x245230/desktop/skillsmatrixaddy/client/src/components/TechnicalInfoDialog.js"],"sourcesContent":["//#region Import components\n// React components\nimport React, { useState, forwardRef } from \"react\";\n\n// Material UI components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport TechnicalInfo from \"./myInfo/TechnicalInfo\";\nimport { Tooltip } from \"@material-ui/core\";\n//#endregion\n\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n    fontWeight: 500,\n    fontFamily: \"HelveticaNeueLTStd-Lt\",\n  },\n}));\n\nfunction TechnicalInfoDialog(props) {\n  // Constants initialization\n  const { tmEmail, tmName, profile } = props;\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = useState(false);\n  const [tmTechInfoDialogTitle, setTmTechInfoDialogTitle] = useState(false);\n\n  // Function calls upon opening dialog\n  const handleOpenDialog = () => {\n    setTmTechInfoDialogTitle(tmName);\n    setIsOpen(true);\n  };\n\n  // Function calls upon closing dialog\n  const handleCloseDialog = () => {\n    setTmTechInfoDialogTitle(\"\");\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"View Skills\">\n        <Button\n          onClick={() => handleOpenDialog()}\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n          <VisibilityIcon />\n        </Button>\n      </Tooltip>\n      <Dialog\n        fullScreen\n        open={isOpen}\n        onClose={() => handleCloseDialog()}\n        aria-labelledby=\"responsive-dialog-title\"\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={() => handleCloseDialog()}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              {`Technical Information of ${tmTechInfoDialogTitle}`}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <DialogContent>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TechnicalInfo profile={profile} tmEmail={tmEmail} />\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n\nexport default TechnicalInfoDialog;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}